#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define se second
#define mp make_pair
#define fi first
#define del(a,vec) vec.erase(std::remove(vec.begin(), vec.end(), a), vec.end());
#define search(f,l,v) binary_search(f,l,v)
#define iter(a,b) vector<int>::iterator a,b
#define lower(v,num) lower_bound (v.begin(), v.end(), num);
#define upper(v,num) upper_bound (v.begin(), v.end(), num); 
#define removecopy(a) unique(a.begin(), a.end()); 
namespace Rahul{
    bool isPrime(int n) 
    {if (n <= 1)  return false; if (n <= 3)  return true; 
    if (n%2 == 0 || n%3 == 0) return false; 
    for (int i=5; i*i<=n; i=i+6) 
        if (n%i == 0 || n%(i+2) == 0) 
           return false; 
    return true; }
    long long pow (int x, long long n,long long mod) {//calculate x^n
    if (n == 0) return 1;

    long long res = pow (x, n / 2,mod);

    res = (res * res) % mod;
    if (n % 2) res = (res * x ) % mod;

    return res;
    }
    long int _gcd(long int a,long int b)
    {
        if(a==0)
            return b;
        else    
            return _gcd(b%a,a);
    }
    //s.erase(s.find(2)) where s={1,2,3,3,2}; 
};
#define ll long long int
using namespace Rahul;

int find(int n)
{
    for(int i=20;i>=0;i--)
        {
            int num=pow(2,i);
            if(n%num==0)
                return num;
        }
    return 1;    
}
int main()
{
     ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
     int t;
     cin>>t;
     while(t--){
         
         int n;
         int x;
         cin>>n>>x;
         
         
        //  cin>>x;
         int ans[n+1];
         for(int i=n;i>=1;i--)
            {
                cout<<1<<" "<<i<<endl;
                int value;
                cout<<flush;
                cin>>value;
                int ind=find(i);
                ans[i]=0;
                for(int j=i;j<=min(i+ind-1,n);j++)
                    {
                        // cout<<j<<" "<<i<<endl;
                        value=value-ans[j];
                    }
                ans[i]=value;    
                
            }
        int flag=-1;    
        for(int i=1;i<=n;i++){    
            if(ans[i]==x)
                flag=i;
            
        }
     
       
        cout<<2<<" "<<flag<<endl;
        cout<<flush;
        // for(int i=1;i<=n;i++)
            // cout<<ans[i]<<" ";  
         string s1;
         cin>>s1;
     }
     
     
     
}
