#!/bin/sh

# BINARIES
CURL_BIN=curl
ECHO_BIN=echo
GREP_BIN=grep
SED_BIN=sed

# STATIC VARIABLES
API=https://www.googleapis.com/urlshortener

# ARGUMENT VARIABLES
ACTION=shorten
HELP=0
URL=""

# INTERNAL VARIABLES
LONG_URL=""
MESSAGE=""
OUTPUT=""
CLIPBOARD=0
OUTPUT_FILE="&2"

for ARGUMENT in "$@"; do
  case "$ARGUMENT" in
    --help|-h)
      HELP=1
    ;;
    -c|--copy)
	 CLIPBOARD=1
    ;;

   -f|--file)
	 TMP_STRING="$@"
       TMP_STRING=${TMP_STRING##*-f }
	 OUTPUT_FILE=${TMP_STRING%%-*}
   ;;
   -v|--version)
	  echo "goo.gl Version \"1.1.0\""
	  exit 1
    ;;
    *)
      if [ -z "$URL" ]; then
        URL="$ARGUMENT"
      else
        "$ECHO_BIN" "URL already given." >&2
        exit 1
      fi
    ;;
  esac
done

if [ $HELP -eq 1 ]; then
  "$ECHO_BIN" "googl"
  "$ECHO_BIN"
  "$ECHO_BIN" "usage: googl URL"
  exit 0
fi

if [ -z "$URL" ]; then
  "$ECHO_BIN" "No URL given. See googl --help." >&2
  exit 1
fi

"$ECHO_BIN" "$URL" | "$GREP_BIN" -qE "^http://goo.gl"

if [ $? -eq 0 ]; then
  ACTION=expand
fi

case $ACTION in
  expand)
    OUTPUT="$("$CURL_BIN" -s "$API/v1/url?shortUrl=$URL")"
    LONG_URL="$("$ECHO_BIN" "$OUTPUT" | "$GREP_BIN" -E \"longUrl\":)"
    if [ $? -eq 0 ]; then
      "$ECHO_BIN" "$LONG_URL" | "$SED_BIN" 's/.*"\([^"]*\)",$/\1/'
      exit 0
    fi
    MESSAGE="$("$ECHO_BIN" "$OUTPUT" | "$GREP_BIN" -E \"message\":)"
    if [ $? -eq 0 ]; then
      MESSAGE="$("$ECHO_BIN" "$MESSAGE" | "$SED_BIN" -n \$p)"
      MESSAGE="$("$ECHO_BIN" "$MESSAGE" | "$SED_BIN" 's/.*"\([^"]*\)"$/\1/')"
      "$ECHO_BIN" "Invalid response ($MESSAGE)." >&2
      exit 1
    fi
    exit 2
  ;;
  shorten)
    OUTPUT="$("$CURL_BIN" -s "$API/v1/url" -H 'Content-Type: application/json' -d "{\"longUrl\": \"$URL\"}")"
    SHORT_URL="$("$ECHO_BIN" "$OUTPUT" | "$GREP_BIN" -E \"id\":)"
    if [ $? -eq 0 ]
    then
      SHORT_URL="$("$ECHO_BIN" "$SHORT_URL" | "$SED_BIN" 's/.*"\([^"]*\)",$/\1/')"
       if [ -f "$OUTPUT_FILE" ];then	     	
	     if !  [ -w "$OUTPUT_FILE" ];then
		 "$ECHO_BIN" "Cannot write to $OUTPUT_FILE: Permission denied"
		 exit 1
	     fi
	     
	     "$ECHO_BIN" -n "[$OUTPUT_FILE] exits! Do you want to overwrite(y/n)? "
	     	     
	     response=""
	     read response

	     if ! [ "$response" = "y" ] || [ "$response" = "Y" ];then
		 OUTPUT_FILE="&2"
	     fi	
	 fi

       "$ECHO_BIN" "$SHORT_URL" >"$OUTPUT_FILE"
      if [ $CLIPBOARD = 1 ];then
	"$ECHO_BIN" -n  "$SHORT_URL" | xclip -selection clipboard
	"$ECHO_BIN" "Copied to clipboard!"
      fi
      exit 0
    fi
    exit 2
  ;;
esac

exit 2
